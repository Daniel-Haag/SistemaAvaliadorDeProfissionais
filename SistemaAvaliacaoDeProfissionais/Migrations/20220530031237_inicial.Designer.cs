// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaAvaliacaoDeProfissionais.Models;

#nullable disable

namespace SistemaAvaliacaoDeProfissionais.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20220530031237_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.Cargo", b =>
                {
                    b.Property<int>("cargoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cargoID"), 1L, 1);

                    b.Property<int?>("TipoCargoID")
                        .HasColumnType("int");

                    b.Property<string>("nomeCargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cargoID");

                    b.HasIndex("TipoCargoID");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.PeriodoAvaliacao", b =>
                {
                    b.Property<int>("PeriodoAvaliacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodoAvaliacaoID"), 1L, 1);

                    b.Property<bool>("AvaliacaoExpirada")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataExpiracaoAutoAvaliacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataExpiracaoAvaliacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicioAutoAvaliacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicioAvaliacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Liberada")
                        .HasColumnType("bit");

                    b.Property<int>("PeriodoID")
                        .HasColumnType("int");

                    b.Property<int>("ProfissionalID")
                        .HasColumnType("int");

                    b.HasKey("PeriodoAvaliacaoID");

                    b.HasIndex("PeriodoID");

                    b.HasIndex("ProfissionalID");

                    b.ToTable("PeriodosAvaliacao");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.Periodos", b =>
                {
                    b.Property<int>("PeriodoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodoID"), 1L, 1);

                    b.Property<int>("CodigoPeriodo")
                        .HasColumnType("int");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeriodoID");

                    b.ToTable("Periodos");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.PlanoDeAcao", b =>
                {
                    b.Property<int>("PlanoDeAcaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanoDeAcaoID"), 1L, 1);

                    b.Property<string>("ConsideracoesDoColaboradorAvaliado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsideracoesFinaisDosPlanosDeAcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodoID")
                        .HasColumnType("int");

                    b.Property<string>("ResultadoDaAcaoProposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextoPlanoDeAcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextoQuestao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("profissionalID")
                        .HasColumnType("int");

                    b.HasKey("PlanoDeAcaoID");

                    b.HasIndex("PeriodoID");

                    b.HasIndex("profissionalID");

                    b.ToTable("PlanosDeAcao");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.Profissionais", b =>
                {
                    b.Property<int>("profissionalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("profissionalID"), 1L, 1);

                    b.Property<int?>("CargoID")
                        .HasColumnType("int");

                    b.Property<int?>("SetorID")
                        .HasColumnType("int");

                    b.Property<int?>("StatusAvaliacaoID")
                        .HasColumnType("int");

                    b.Property<string>("admissao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("gestor")
                        .HasColumnType("bit");

                    b.Property<string>("matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("profissionalID");

                    b.HasIndex("CargoID");

                    b.HasIndex("SetorID");

                    b.HasIndex("StatusAvaliacaoID");

                    b.ToTable("Profissionais");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.Questionario", b =>
                {
                    b.Property<int>("QuestaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestaoID"), 1L, 1);

                    b.Property<string>("Questao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoCargoID")
                        .HasColumnType("int");

                    b.Property<string>("TituloQuestao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestaoID");

                    b.HasIndex("TipoCargoID");

                    b.ToTable("Questionarios");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.RegistroDeAdvertencias", b =>
                {
                    b.Property<int>("RegistroDeAdvertenciasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistroDeAdvertenciasID"), 1L, 1);

                    b.Property<string>("CaminhoArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAdvertencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodoAvaliacaoID")
                        .HasColumnType("int");

                    b.HasKey("RegistroDeAdvertenciasID");

                    b.HasIndex("PeriodoAvaliacaoID");

                    b.ToTable("RegistroDeAdvertencias");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.ResultadoAvaliacao", b =>
                {
                    b.Property<int>("ResultadoAvaliacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultadoAvaliacaoID"), 1L, 1);

                    b.Property<DateTime?>("DataAutoAvaliacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAvaliacao")
                        .HasColumnType("datetime2");

                    b.Property<double?>("NotaAutoAvaliacao")
                        .HasColumnType("float");

                    b.Property<double?>("NotaAvaliacao")
                        .HasColumnType("float");

                    b.Property<int?>("PeriodoID")
                        .HasColumnType("int");

                    b.Property<int>("ProfissionalID")
                        .HasColumnType("int");

                    b.Property<string>("RespostasAutoAvaliacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespostasAvaliacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResultadoAvaliacaoID");

                    b.HasIndex("PeriodoID");

                    b.HasIndex("ProfissionalID");

                    b.ToTable("ResultadoAvaliacoes");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.Setores", b =>
                {
                    b.Property<int>("setorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("setorID"), 1L, 1);

                    b.Property<string>("nomeSetor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("setorID");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.StatusAvaliacao", b =>
                {
                    b.Property<int>("statusAvaliacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("statusAvaliacaoID"), 1L, 1);

                    b.Property<string>("nomeStatusAvaliacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("statusAvaliacaoID");

                    b.ToTable("StatusAvaliacoes");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.TipoCargo", b =>
                {
                    b.Property<int>("tipoCargoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tipoCargoID"), 1L, 1);

                    b.Property<string>("nomeTipoCargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tipoCargoID");

                    b.ToTable("TipoCargos");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.UsuariosExclusivos", b =>
                {
                    b.Property<int>("UsuarioExclusivoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioExclusivoID"), 1L, 1);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioLogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioExclusivoID");

                    b.ToTable("UsuariosExclusivos");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.Cargo", b =>
                {
                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.TipoCargo", "tipoCargo")
                        .WithMany()
                        .HasForeignKey("TipoCargoID");

                    b.Navigation("tipoCargo");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.PeriodoAvaliacao", b =>
                {
                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.Periodos", "Periodo")
                        .WithMany()
                        .HasForeignKey("PeriodoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.Profissionais", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Periodo");

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.PlanoDeAcao", b =>
                {
                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.Periodos", "Periodo")
                        .WithMany()
                        .HasForeignKey("PeriodoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.Profissionais", "Profissional")
                        .WithMany()
                        .HasForeignKey("profissionalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Periodo");

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.Profissionais", b =>
                {
                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.Cargo", "cargo")
                        .WithMany()
                        .HasForeignKey("CargoID");

                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.Setores", "setor")
                        .WithMany()
                        .HasForeignKey("SetorID");

                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.StatusAvaliacao", "statusAvaliacao")
                        .WithMany()
                        .HasForeignKey("StatusAvaliacaoID");

                    b.Navigation("cargo");

                    b.Navigation("setor");

                    b.Navigation("statusAvaliacao");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.Questionario", b =>
                {
                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.TipoCargo", "TipoCargo")
                        .WithMany()
                        .HasForeignKey("TipoCargoID");

                    b.Navigation("TipoCargo");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.RegistroDeAdvertencias", b =>
                {
                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.PeriodoAvaliacao", "Periodo")
                        .WithMany()
                        .HasForeignKey("PeriodoAvaliacaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Periodo");
                });

            modelBuilder.Entity("SistemaAvaliacaoDeProfissionais.Models.ResultadoAvaliacao", b =>
                {
                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.Periodos", "Periodo")
                        .WithMany()
                        .HasForeignKey("PeriodoID");

                    b.HasOne("SistemaAvaliacaoDeProfissionais.Models.Profissionais", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Periodo");

                    b.Navigation("Profissional");
                });
#pragma warning restore 612, 618
        }
    }
}
